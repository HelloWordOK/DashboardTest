<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nokia.charts.dao.ActiveUsersDao">
	<cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
	<resultMap type="com.nokia.charts.entity.ActiveUsers" id="resultActiveUser">
		<id column="id" property="id" />
		<result column="service_id" property="serviceId" />
		<result column="user_counts" property="userCounts" />
		<result column="count_time" property="countTime" />
	</resultMap>
	
	<sql id="domainBundleServiceList">
	    SELECT DISTINCT
			ddo.id domainId,
			ddo.domain_name domainName,
			dso.id serviceId,
			dso.service_code serviceCode,
			dso.service_name serviceName,
			dbu.id bundleId,
			dbu.bundle_name bundleName
		FROM
			db_domain_bundle_service dbs
		LEFT JOIN db_domain ddo ON ddo.id = dbs.domain_id
		LEFT JOIN db_bundle dbu ON dbu.id = dbs.bundle_id
		LEFT JOIN db_service dso ON dso.id = dbs.service_id
	</sql>

	<insert id="addActiveUser" parameterType="com.nokia.charts.entity.ActiveUsers">
		INSERT INTO 
			active_user
			(service_id,
			user_counts,
			count_time)
		VALUES
			(#{serviceId},
			#{userCounts},
			#{countTime})
		ON DUPLICATE KEY UPDATE
			user_counts = values(user_counts)
	</insert>
	
	<select id="getActiveUsersList" parameterType="map" resultMap="resultActiveUser">
	    SELECT
	    	*
	    FROM
	    	active_user
	    WHERE
	    	service_id = #{serviceId}
	    <if test="startTime!=null">
			<![CDATA[ AND count_time >= #{startTime} ]]>
		</if>
		<if test="endTime!=null">
		    <![CDATA[ AND count_time <= #{endTime} ]]>
		</if>
		ORDER BY count_time
	</select>
	
	<select id="getActiveUsersReportData" parameterType="map" resultType="map">
	    SELECT
			au.user_counts userCounts,
			au.count_time countTime,
			dso.service_name serviceName
		FROM
			active_user au
		LEFT JOIN db_service dso ON dso.id = au.service_id 
		WHERE
			au.service_id IN
			<foreach item="serviceId" index="index" collection="serviceIdList"  open="(" separator="," close=")">  
           		#{serviceId}  
      		</foreach>
      	<if test="startTime!=null">
			<![CDATA[ AND au.count_time >= #{startTime} ]]>
		</if>
		<if test="endTime!=null">
		    <![CDATA[ AND au.count_time <= #{endTime} ]]>
		</if>
		ORDER BY
			dso.service_name,
			au.count_time
	</select>
	
	<select id="getActiveUserServiceListById" parameterType="map" resultType="com.nokia.charts.dto.SelectionOptionDto">
	    SELECT
	    	id serviceId,
	    	service_name serviceName
	    FROM
	    	db_service
	    WHERE
	    	id IN <foreach item="serviceId" index="index" collection="serviceIdList"  open="(" separator="," close=")">  
           		#{serviceId}  
      		</foreach>
	</select>
	
	<select id="getDomainList" resultType="com.nokia.charts.dto.SelectionOptionDto">
	    SELECT DISTINCT
			dg.domainId,
			dg.domainName
		FROM
			(<include refid="domainBundleServiceList"/>) dg
		ORDER BY
			dg.domainName
	</select>
	
	<select id="getBundleList" resultType="com.nokia.charts.dto.SelectionOptionDto">
	    SELECT DISTINCT
			dg.bundleId,
			dg.bundleName
		FROM
			(<include refid="domainBundleServiceList"/>) dg
		ORDER BY
			dg.bundleName
	</select>
	
	<select id="getServiceList" resultType="com.nokia.charts.dto.SelectionOptionDto">
	    SELECT DISTINCT
			dg.serviceId,
			dg.serviceName
		FROM
			(<include refid="domainBundleServiceList"/>) dg
		ORDER BY
			dg.serviceName
	</select>
	
	<select id="getRelationDomainList" resultType="com.nokia.charts.dto.SelectionOptionDto">
	    <include refid="domainBundleServiceList"/>
	</select>
</mapper>