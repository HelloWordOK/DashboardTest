<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nokia.charts.dao.ProblemImportDao">
	<cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
	<resultMap type="map" id="resultProblem">
		<id column="id" property="id" />
		<result column="problem_id" property="problem_ID" />
		<result column="status" property="status" />
		<result column="priority_code" property="priority_Code" />
		<result column="current_phase" property="current_Phase" />
		<result column="m_s_r_c_o_assignment" property="m_S_R_C_O_Assignment" />
		<result column="open_time" property="open_Time" />
		<result column="rootcause_date" property="rootcause_Date" />
		<result column="rootcause_date_interval" property="rootcause_Date_Interval" />
		<result column="solution_date" property="solution_Date" />
		<result column="close_time" property="close_Time" />
		<result column="sla_breach" property="sla_Breach" />
		<result column="real_breach" property="real_breach" />
		<result column="comment" property="comment" />
	</resultMap>

	<insert id="insertProblemList" parameterType="java.util.List">
	    INSERT INTO qa_problem 
	    	(problem_id,
	    	status,
	    	priority_code,
	    	current_phase,
	    	m_s_r_c_o_assignment,
	    	open_time,
	    	rootcause_date,
	    	rootcause_date_interval,
	    	solution_date,
	    	close_time,
	    	sla_breach)
	    	values
	    	<foreach collection ="list" item="problem" index= "index" separator =",">
	    	    (
		    	    #{problem.problem_ID},
			    	#{problem.status},
			    	#{problem.priority_Code},
			    	#{problem.current_Phase},
			    	#{problem.m_S_R_C_O_Assignment},
			    	#{problem.open_Time},
			    	#{problem.rootcause_Date},
			    	#{problem.rootcause_Date_Interval},
			    	#{problem.solution_Date},
			    	#{problem.close_Time},
			    	#{problem.sla_Breach}
		    	)
	    	</foreach>
	    	ON DUPLICATE KEY UPDATE 
		    	status = values(status),
		    	priority_code = values(priority_code),
		    	current_phase = values(current_phase),
		    	m_s_r_c_o_assignment = values(m_s_r_c_o_assignment),
		    	open_time = values(open_time),
		    	rootcause_date = values(rootcause_date),
		    	solution_date = values(solution_date),
		    	close_time = values(close_time),
		    	sla_breach = values(sla_breach)
	</insert>
	
	<select id="getProblemAllMonthOrWeekCreatedList" parameterType="map" resultType="com.nokia.charts.dto.qa.ProblemResultDto">
	    SELECT
			open_time,
			close_time,
			sla_breach,
			priority_code
		FROM
			qa_problem
		WHERE
			m_s_r_c_o_assignment in
			<foreach item="group" index="index" collection="groupList"  open="(" separator="," close=")">  
           		#{group}  
      		</foreach>
	    <if test="startMonth!=null">
			<![CDATA[ AND open_time >= #{startMonth} ]]>
		</if>
		<if test="endMonth!=null">
		    <![CDATA[ AND open_time <= #{endMonth} ]]>
		</if>
		<if test="startWeekDay!=null">
			<![CDATA[ AND open_time >= #{startWeekDay} ]]>
		</if>
		<if test="endWeekDay!=null">
		    <![CDATA[ AND open_time <= #{endWeekDay} ]]>
		</if>
		<![CDATA[ AND open_time <> "" ]]>
	</select>
	
	<select id="getProblemAllMonthOrWeekClosedList" parameterType="map" resultType="com.nokia.charts.dto.qa.ProblemResultDto">
	   SELECT
			open_time,
			close_time,
			sla_breach,
			priority_code,
			real_breach
		FROM
			qa_problem
		WHERE
			m_s_r_c_o_assignment in
			<foreach item="group" index="index" collection="groupList"  open="(" separator="," close=")">  
           		#{group}  
      		</foreach>
	    <if test="startMonth!=null">
			<![CDATA[ AND close_time >= #{startMonth} ]]>
		</if>
		<if test="endMonth!=null">
		    <![CDATA[ AND close_time <= #{endMonth} ]]>
		</if>
		<if test="startWeekDay!=null">
			<![CDATA[ AND close_time >= #{startWeekDay} ]]>
		</if>
		<if test="endWeekDay!=null">
		    <![CDATA[ AND close_time <= #{endWeekDay} ]]>
		</if>
		<![CDATA[ AND close_time <> "" ]]>
	</select>
	
	<select id="getOpendBacklogCount" parameterType="map" resultType="int">
	   SELECT
			count(1)
		FROM
			qa_problem
		WHERE
			m_s_r_c_o_assignment in
			<foreach item="group" index="index" collection="groupList"  open="(" separator="," close=")">  
           		#{group}  
      		</foreach>
		<if test="startMonth!=null">
			<![CDATA[ AND open_time < #{startMonth}]]>
		</if>
		<if test="startWeekDay!=null">
		    <![CDATA[ AND open_time < #{startWeekDay} ]]>
		</if>
		<![CDATA[ AND open_time <> "" ]]>
	</select>
	
	<select id="getClosedBacklogCount" parameterType="map" resultType="int">
	   SELECT
			count(1)
		FROM
			qa_problem
		WHERE
			m_s_r_c_o_assignment in 
			<foreach item="group" index="index" collection="groupList"  open="(" separator="," close=")">  
           		#{group}  
      		</foreach>
		<if test="startMonth!=null">
			<![CDATA[ AND close_time < #{startMonth} ]]>
		</if>
		<if test="startWeekDay!=null">
		    <![CDATA[ AND close_time < #{startWeekDay} ]]>
		</if>
		<![CDATA[ AND close_time <> "" ]]>
	</select>
	
	<!-- Get problem result and service code -->
	<select id="getAllProblemMonthlyList" parameterType="map" resultType="java.util.HashMap">
	   SELECT
			p.problem_id,
			p.status,
			p.priority_code,
			p.current_phase,
			p.m_s_r_c_o_assignment,
			p.open_Time,
			p.rootcause_date,
			p.rootcause_date_interval,
			p.solution_date,
			p.close_Time,
			s.service_code
		FROM
			qa_problem p
		LEFT JOIN db_group g ON p.m_s_r_c_o_assignment = g.group_name
		LEFT JOIN db_service s ON g.service_code = s.service_code
		WHERE
			p.m_s_r_c_o_assignment in
			<foreach item="group" index="index" collection="groupList"  open="(" separator="," close=")">  
           		#{group}  
      		</foreach>
	    <if test="startMonth!=null and endMonth!=null">
			<![CDATA[ AND ((p.open_time >= #{startMonth} AND p.open_time <= #{endMonth})]]>
			<![CDATA[ OR (p.close_time >= #{startMonth} AND p.close_time <= #{endMonth})]]>
			<![CDATA[ OR (p.open_time >= #{startMonth} AND p.close_time <= #{endMonth})]]>
			<![CDATA[ OR (p.open_time < #{startMonth} AND p.close_time = ''))]]>
		</if>
		<if test="startWeekDay!=null and endWeekDay!=null">
			<![CDATA[ AND ((p.open_time >= #{startWeekDay} AND p.open_time <= #{startWeekDay})]]>
			<![CDATA[ OR (p.close_time >= #{startWeekDay} AND p.close_time <= #{startWeekDay})]]>
			<![CDATA[ OR (p.open_time >= #{startWeekDay} AND p.close_time <= #{startWeekDay})]]>
			<![CDATA[ OR (p.open_time < #{startWeekDay} AND p.close_time = ''))]]>
		</if>
	</select>
	
	<select id="getProblemServiceClosedList" parameterType="map" resultMap="resultProblem">
	   SELECT
			*
		FROM
			qa_problem
		WHERE
			m_s_r_c_o_assignment in
			<foreach item="group" index="index" collection="groupList"  open="(" separator="," close=")">  
           		#{group}  
      		</foreach>
	    <if test="startMonth!=null">
			<![CDATA[ AND close_time >= #{startMonth} ]]>
		</if>
		<if test="endMonth!=null">
		    <![CDATA[ AND close_time <= #{endMonth} ]]>
		</if>
		<if test="slaBreachList.size()!=0">
		    AND (sla_breach in
			<foreach item="sla" index="index" collection="slaBreachList"  open="(" separator="," close=")">  
	           	#{sla}  
	      	</foreach>
			<if test="real_breach!=null||real_breach!=''">
			    OR real_breach=#{real_breach}
			</if>)
		</if>
		<![CDATA[ AND close_time <> "" ]]>
	</select>

	<update id="updateProblemRealBreach" parameterType="map">
	    UPDATE qa_problem
	    <set>
	        <if test="real_breach != null">
	    	    real_breach = #{real_breach},
	    	</if>
	    	<if test="comment !=null">
	    	    comment = #{comment},
	    	</if>
	    </set>
	    WHERE
	    	  id = #{id}
	</update>
</mapper>