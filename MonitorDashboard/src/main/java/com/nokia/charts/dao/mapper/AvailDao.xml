<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nokia.charts.dao.AvailDao">
	<cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
	<resultMap type="com.nokia.charts.entity.Ping" id="resultPing">
		<id column="id" property="id" />
		<result column="server_id" property="serverId" />
		<result column="status_id" property="statusId" />
		<result column="threshold_warning" property="thresholdWarning" />
		<result column="message" property="message" />
		<result column="threshold_critical" property="thresholdCritical" />
		<result column="check_time" property="checkTime" />
	</resultMap>

	<resultMap type="com.nokia.charts.entity.Url" id="resultUrl">
		<id column="id" property="id" />
		<result column="server_id" property="serverId" />
		<result column="status_id" property="statusId" />
		<result column="monitor_id" property="monitorId" />
		<result column="message" property="message" />
		<result column="upper_spec_threshold" property="upperSpecThreshold" />
		<result column="upper_control_threshold" property="upperControlThreshold" />
		<result column="average" property="average" />
		<result column="lower_control_threshold" property="lowerControlThreshold" />
		<result column="lower_spec_threshold" property="lowerSpecThreshold" />
		<result column="check_time" property="checkTime" />
	</resultMap>
	
	<resultMap type="com.nokia.charts.entity.shinepoint.MajorIncident"
		id="resultMajorIncident">
		<id column="id" property="id" />
		<result column="service_id" property="serviceId" />
		<result column="start_date_time" property="startDateTime" />
		<result column="end_date_time" property="endDateTime" />
		<result column="responsible" property="responsible" />
		<result column="sr_number" property="srNumber" />
		<result column="severity" property="severity" />
		<result column="issue_description" property="issueDescription" />
		<result column="problem_id" property="problemId" />
		<result column="root_cause" property="rootCause" />
		<result column="status" property="status" />
		<result column="source_from" property="sourceFrom" />
		<result column="resolution_time" property="resolutionTime" />
	</resultMap>

	<sql id="majorincident">
	    SELECT
			mi.id,
			dso.id serviceId,
			dso.service_name serviceName,
			mi.start_date_time startDateTime,
			mi.end_date_time endDateTime,
			mi.responsible,
			mi.sr_number srNumber,
			mi.severity,
			mi.issue_description issueDescription,
			mi.problem_id problemId,
			mi.root_cause rootCause,
			mi.`status`,
			mi.source_from sourceFrom,
			mi.resolution_time resolutionTime
		FROM
			major_incident mi
		LEFT JOIN db_service dso ON dso.id = mi.service_id
	</sql>
	
	<sql id="domainBundleService">
	    SELECT DISTINCT
			ddo.id domainId,
			ddo.domain_name domainName,
			dso.id serviceId,
			dso.service_code serviceCode,
			dso.service_name serviceName,
			dbu.id bundleId,
			dbu.bundle_name bundleName,
			dse.id serverId,
			dse.server_name serverName
		FROM
			db_domain_bundle_service dbs
		LEFT JOIN db_domain ddo ON ddo.id = dbs.domain_id
		LEFT JOIN db_bundle dbu ON dbu.id = dbs.bundle_id
		LEFT JOIN db_service dso ON dso.id = dbs.service_id,
		 db_servers dse
		WHERE
			dse.service_id = dso.id
	</sql>
	<insert id="insertMajorIncident" parameterType="com.nokia.charts.entity.shinepoint.MajorIncident">
		INSERT INTO
			major_incident
			(service_id,
			start_date_time,
			end_date_time,
			responsible,
			sr_number,
			severity,
			issue_description,
			problem_id,
			root_cause,
			status,
			source_from,
			resolution_time
			)
		VALUES
			(#{serviceId},
			#{startDateTime},
			#{endDateTime},
			#{responsible},
			#{srNumber},
			#{severity},
			#{issueDescription},
			#{problemId},
			#{rootCause},
			#{status},
			#{sourceFrom},
			#{resolutionTime})
	</insert>
	
	<select id="getPingList" parameterType="com.nokia.charts.dto.SearchChoiceDto"
		resultMap="resultPing">

		SELECT
			*
		FROM
			check_ping
		WHERE
			server_id = #{serverId} 
			<![CDATA[ AND check_time >= #{responseTimeStart} and check_time<=#{responseTimeEnd}]]>
		ORDER BY
			check_time
	</select>
	
	<select id="getUrlList" parameterType="com.nokia.charts.dto.SearchChoiceDto"
		resultMap="resultUrl" useCache="true">

		SELECT
			*
		FROM
			check_url
		WHERE
			server_id = #{serverId} AND monitor_id = #{monitorId}
			<![CDATA[ AND check_time >= #{responseTimeStart} and check_time<=#{responseTimeEnd}]]>
		ORDER BY
			check_time
	</select>
	
	<select id="getMajorIncidentList" resultType="com.nokia.charts.dto.shinepoint.MajorIncidentDto">
		<include refid="majorincident"></include>
	</select>

	<select id="getMajorDataById" parameterType="int"
		resultType="com.nokia.charts.dto.shinepoint.MajorIncidentDto">
		<include refid="majorincident"></include>
		WHERE
			mi.id = #{id}
	</select>
	
	<select id="getServiceListToMonitor" resultType="com.nokia.charts.dto.admin.DomainBundleServiceDto">
	    SELECT DISTINCT
			dso.id serviceId,
			dso.service_code serviceCode,
			dso.service_name serviceName
		FROM
			server_monitor sm
		LEFT JOIN db_servers dse ON dse.id = sm.server_id,
		 db_service dso
		WHERE
			dso.id = dse.service_id
		ORDER BY
			dso.service_name
	</select>
	
	<select id="getServerListByServiceId" parameterType="int" resultType="com.nokia.charts.entity.admin.Server">
	   SELECT DISTINCT
			dse.id,
			dse.ip_address ipAddress,
			dse.server_details serverDetails,
			dse.server_name serverName
		FROM
			db_servers dse
		WHERE
			dse.service_id = #{serviceId}
		ORDER BY
			dse.server_name
	</select>
	
	<select id="getMonitorListByServerId" parameterType="int" resultType="com.nokia.charts.entity.Monitor">
	    SELECT DISTINCT
			m.id,
			m.monitor_name monitorName,
			m.description
		FROM
			monitor m,
			server_monitor sm
		WHERE
			m.id = sm.monitor_id
		AND sm.server_id = #{serverId}
		ORDER BY
			m.monitor_name
	</select>
	
	<select id="getServerById" parameterType="int" resultType="com.nokia.charts.entity.admin.Server">
	    SELECT
			dse.id,
			dse.ip_address ipAddress,
			dse.server_details serverDetails,
			dse.server_name serverName
		FROM
			db_servers dse
		WHERE
			dse.id = #{serverId}
	</select>
	
	<select id="getMonitorDesp" parameterType="int" resultType="string">
	    SELECT
			description
		FROM
			monitor
		WHERE
			id = #{id}
	</select>
	
	<select id="getAvailDailyReport" parameterType="com.nokia.charts.dto.SearchChoiceDto" resultType="com.nokia.charts.entity.AvailReport">
	    SELECT
			*
		FROM
			avail_daily_report
		WHERE
			server_id = #{serverId} 
			<![CDATA[ and date>=#{responseTimeStart} and date<=#{responseTimeEnd}]]>
		ORDER BY
			date
	</select>
	
	<select id="getDomainList" resultType="com.nokia.charts.dto.SelectionOptionDto">
	    SELECT DISTINCT
			dg.domainId,
			dg.domainName
		FROM
			(<include refid="domainBundleService"/>) dg
		ORDER BY
			dg.domainName
	</select>
	
	<select id="getBundleList" resultType="com.nokia.charts.dto.SelectionOptionDto">
	    SELECT DISTINCT
			dg.bundleId,
			dg.bundleName
		FROM
			(<include refid="domainBundleService"/>) dg
		ORDER BY
			dg.bundleName
	</select>
	
	<select id="getServiceList" resultType="com.nokia.charts.dto.SelectionOptionDto">
	    SELECT DISTINCT
			dg.serviceId,
			dg.serviceName
		FROM
			(<include refid="domainBundleService"/>) dg
		ORDER BY
			dg.serviceName
	</select>
	
	<select id="getRelationDomainList" resultType="com.nokia.charts.dto.SelectionOptionDto">
	    <include refid="domainBundleService"/>
	</select>

	<select id="getAvailMonthlyYearList" resultType="string" parameterType="map">
	    SELECT DISTINCT
			date
		FROM
			avail_monthly_report
		WHERE
			<![CDATA[ date>=#{responseTimeStart} and date<=#{responseTimeEnd}]]>
		ORDER BY
			date
	</select>
	
	<select id="getAvailMonthlyReport" resultType="com.nokia.charts.entity.AvailReport" parameterType="map">
	    SELECT
			*
		FROM
			avail_monthly_report
		WHERE
			server_name = #{serverName} 
			<![CDATA[ and date>=#{responseTimeStart} and date<=#{responseTimeEnd}]]>
		ORDER BY
			date
	</select>
	
	<update id="updateMajorDataById" parameterType="com.nokia.charts.dto.shinepoint.MajorIncidentDto">
		UPDATE
			major_incident
		SET
			service_id=#{serviceId},
			start_date_time=#{startDateTime},
			end_date_time=#{endDateTime},
			responsible=#{responsible},
			sr_number=#{srNumber},
			severity=#{severity},
			issue_description=#{issueDescription},
			problem_id=#{problemId},
			root_cause=#{rootCause},
			status = #{status},
			source_from=#{sourceFrom},
			resolution_time=#{resolutionTime}
		WHERE
			id = #{id}
	</update>
	
</mapper>